<project name="OPSIN" default="dist" basedir=".">
	<description>
    Builds OPSIN (Open Parser for Structural IUPAC Nomenclature)
  </description>

  <!-- set global properties for this build -->
  <tstamp>
    <format property="TODAY_SVN" pattern="yyyyMMdd" locale="en" />
  </tstamp>
  <property name="classpath" location="lib"/>
  <property name="src" location="src/main/java"/>
  <property name="resources" location="src/main/resources"/>
  <property name="testClasses" location="src/test/java"/>
  <property name="doc" location="doc"/>
  <property name="dist" location="dist"/>
  <property name="version" value="${TODAY_SVN}"/>
  <property name="test" value="uk.ac.cam.ch.wwmm.opsin.AllTests" />

  <target name="clean" description="Clean up" >
    <delete dir="${dist}"/>
  </target>

  <target name="init" depends="clean,mvn-init">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${dist}"/>
    <copy todir="${dist}">
      <fileset dir="${resources}"/>
    </copy>
  </target>

  <target name="compile" depends="init" description="Compile the source" >
    <unjar dest="${dist}">
      <fileset refid="runtime.fileset"/>
    </unjar>
    <javac srcdir="${src}" destdir="${dist}">
      <classpath>
        <fileset refid="runtime.fileset"/>
      </classpath>
    </javac>
  </target>

	<target name="dist" depends="compile" description="Create a single OPSIN jarfile">
    <jar destfile="opsin-${version}.jar">
      <manifest>
        <attribute name="Main-Class" value="uk.ac.cam.ch.wwmm.opsin.NameToStructure"/>
      </manifest>
      <fileset dir="${dist}"/>
    </jar>
    <delete dir="${dist}"/>
  </target>

  <target name="javadoc" description="Generates JavaDoc">
    <javadoc destdir="${doc}" sourcepath="${src}">
      <arg value="-verbose"/>
      <classpath>
        <fileset refid="runtime.fileset"/>
      </classpath>
    </javadoc>
  </target>

  <target name="test" depends="compile" description="Run OPSIN's tests">
    <javac srcdir="${testClasses}" destdir="${dist}">
      <classpath>
        <fileset refid="test.fileset"/>
      </classpath>
    </javac>
		<junit printsummary="yes" haltonfailure="yes">
      <classpath>
        <pathelement path="${dist}"/>
        <fileset refid="test.fileset"/>
      </classpath>
      <test name="${test}"/>
		</junit>
    <delete dir="${dist}"/>
	</target>

<target name="mvn-init" unless="compile.classpath" xmlns:artifact="urn:maven-artifact-ant">
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
        classpath="${classpath}/maven-ant-tasks-2.0.10.jar"/>
    <condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
        <isset property="maven.repo.local"/>
    </condition>
    <echo>maven.repo.local=${maven.repo.local}</echo>
    <artifact:localRepository id="local.repository" path="${maven.repo.local}"/>
    <artifact:pom file="pom.xml" id="maven.project"/>
    <artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile">
        <pom refid="maven.project"/>
        <localRepository refid="local.repository"/>
    </artifact:dependencies>
    <artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
        <pom refid="maven.project"/>
        <localRepository refid="local.repository"/>
    </artifact:dependencies>
    <artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
        <pom refid="maven.project"/>
        <localRepository refid="local.repository"/>
    </artifact:dependencies>
</target>
</project>